version: '3.1'

services:
  postgres-icsvalset:
    image: postgres:latest
    container_name: postgres-icsvalset
    environment:
      POSTGRES_DB: icsValsetMonitoring
      POSTGRES_USER: monitoring
      POSTGRES_PASSWORD: monitoring
    networks:
      - icsvalset_network
    volumes:
      - ./data/.icsValsetMonitoring_data:/var/lib/postgresql/data

  grafana-icsvalset:
    image: grafana/grafana-oss:latest
    container_name: grafana-icsvalset
    entrypoint: /bin/sh -c "envsubst < /etc/grafana/provisioning/datasources/postgres-template.yaml > /etc/grafana/provisioning/datasources/postgres.yaml && exec /run.sh"
    environment:
      - DB_HOST=${PG_HOST}:${PG_PORT}
      - DB_USER=${PG_USER}
      - DB_DBNAME=${PG_DBNAME}
      - DB_PWD=${PG_PWD}
    ports:
      - "3001:3000"
    depends_on:
      - postgres-icsvalset
    networks:
      - icsvalset_network
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./data/.grafana_data/data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
#    environment:
#      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_NAME=ccvalidators
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer

  indexer-icsvalset:
    build: . 
    container_name: indexer-icsvalset
    depends_on:
      - postgres-icsvalset
    networks:
      - icsvalset_network
    environment:
      - DEPLOYMENT=${DEPLOYMENT}
      - PROVIDER_REST=${PROVIDER_REST}
      - PROVIDER_RPC=${PROVIDER_RPC}
      - SOVEREIGN_RPC=${SOVEREIGN_RPC}
      - CONSUMER_RPCS=${CONSUMER_RPCS}
      - NUM_WORKERS=${NUM_WORKERS}
      - PG_HOST=${PG_HOST}
      - PG_USER=${PG_USER}
      - PG_PORT=${PG_PORT}
      - PG_PWD=${PG_PWD}
      - PG_DBNAME=${PG_DBNAME}

networks:
  icsvalset_network:
    driver: bridge